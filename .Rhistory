runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Dropbox/transmem_shinyapp')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Dropbox/transmem_shinyapp')
runApp()
runApp()
runApp()
runApp('~/Dropbox/transmem_shinyapp')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
FALSE == FALSE
FALSE == NULL
NULL == NULL
is.logical(NULL)
is.logical(NULL)
is.logical(5)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Dropbox/transmem_shinyapp')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
matrix(1:9, nrow = 3)
matrix(1:9, nrow = 3)[1:2]
matrix(1:9, nrow = 3)[1:2, ]
matrix(1:9, nrow = 3)[1:1, ]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
is.na(NA)
is.na(rep(NA, 4))
c(1:1)
1:1
1:'1'
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Dropbox/transmem_shinyapp')
install.library('EnvStats')
install.packages('EnvStats')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data.frame(a = 1:5)
data.frame(a = 1:5, b = 4:6)
data.frame(a = 1:5, b = 4:9)
data.frame(a = 1:5, b = 4:10)
data.frame(a = 1:5, b = 4:8)
as.numeric(data.frame(a = 1:5, b = 4:8))
apply(data.frame(a = 1:5, b = 4:8), 2, as.numeric)
str(apply(data.frame(a = 1:5, b = 4:8), 2, as.numeric))
data.frameapply(data.frame(a = 1:5, b = 4:8), 2, as.numeric)
data.frame(apply(data.frame(a = 1:5, b = 4:8), 2, as.numeric))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
lawstat::levene.test()
install.packages('lawstat')
lawstat::levene.test()
library(”DAAG”)
library('DAAG')
install.packages('DAAG')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
list(a=1:3, b=3:6, c = 9:11)
list(a=1:3, b=3:6, c = 9:11)->zz
zz['a']
zz['b']
zz[c('a','b')]
getOption("na.action")
list(a=data.frame(a=1:3, b=3:6, c = 9:11), b=data.frame(a=1:3, b=3:6, c = 9:11), c = data.frame(a=1:3, b=3:6, c = 9:11))->zz
data.frame(a=1:3, b=3:6, c = 9:11)
data.frame(a=1:3, b=3:5, c = 9:11)
list(a=data.frame(a=1:3, b=3:5, c = 9:11), b=data.frame(a=1:3, b=3:5, c = 9:11), c = data.frame(a=1:3, b=3:5, c = 9:11))->zz
zz['b']
zz[c('a','b')]
zz[c('a','b')]$a
zz[c('a','b')]
zz[[c('a','b')]]
zz[c('a','b')]
zz[c('a','b')]$c
zz[c('a','b')]$a
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(car)
runApp()
runApp()
runApp()
runApp()
library(outliers)
install.packages('outliers')
library(outliers)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
citation(car)
citation('car')
citation('outliers')
runApp()
runApp()
runApp()
citation(EnvStats)
citation('EnvStats')
runApp()
# Create data
set.seed(1)
treatment <- rep(c("A", "B", "C", "D", "E"), each=20)
value=c( sample(2:5, 20 , replace=T) , sample(6:10, 20 , replace=T), sample(1:7, 20 , replace=T), sample(3:10, 20 , replace=T) , sample(10:20, 20 , replace=T) )
data=data.frame(treatment,value)
# What is the effect of the treatment on the value ?
model=lm( data$value ~ data$treatment )
ANOVA=aov(model)
# Tukey test to study each pair of treatment :
TUKEY <- TukeyHSD(x=ANOVA, 'data$treatment', conf.level=0.95)
plot(TUKEY , las=1 , col="brown")
plot(TUKEY , las=1 , col="brown", xlab = '')
class(TUKEY)
runApp()
summary(ANOVA)
str(ANOVA)
str(ANOVA)$model
str(ANOVA$model)
str(ANOVA$model$data)
ANOVA$model
TUKEY
summary(TUKEY)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ANOVA
summary(ANOVA)
library(agricolae)
install.packages(agricolae)
install.packages('agricolae')
install.packages("agricolae")
data(sweetpotato)
model<-aov(yield~virus,data=sweetpotato)
out <- duncan.test(model,"virus",
main="Yield of sweetpotato. Dealt with different virus")
library(agricolae)
data(sweetpotato)
model<-aov(yield~virus,data=sweetpotato)
out <- duncan.test(model,"virus",
main="Yield of sweetpotato. Dealt with different virus")
out
plot(out,variation="IQR")
duncan.test(model,"virus",alpha=0.01,console=TRUE)
citation('agricolae')
citation('EnvStats')
citation('outliers')
plot(out)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages('Dunnett')
install.packages('PMCMRplus')
citation('PMCMRplus')
install.packages('PMCMRplus')
citation('PMCMRplus')
install.packages('PMCMRplus')
install.packages('Rmpfr')
install.packages('Rmpfr')
install.packages('Rmpfr')
devtools::install_github('https://github.com/cran/Rmpfr')
runApp()
runApp()
(data <- round(rnorm(8, 0.4, 0.1), 2))
set.seed(1)
(data <- round(rnorm(8, 0.4, 0.1), 2))
t.test(x = HgTot, mu = 0.5, alternative = 'less')
(HgTot <- round(rnorm(8, 0.4, 0.1), 2)) #g kg^-1
set.seed(1)
(HgTot <- round(rnorm(8, 0.4, 0.1), 2)) #g kg^-1
set.seed(1)
(HgTot <- round(rnorm(8, 0.45, 0.1), 2)) #g kg^-1
t.test(x = HgTot, mu = 0.5, alternative = 'less')
set.seed(1)
(HgTot <- round(rnorm(8, 0.45, 0.05), 2)) #g kg^-1
t.test(x = HgTot, mu = 0.5, alternative = 'less')
set.seed(1)
(HgTot <- round(rnorm(8, 0.47, 0.05), 2)) #g kg^-1
t.test(x = HgTot, mu = 0.5, alternative = 'less')
set.seed(1)
(HgTot <- round(rnorm(8, 0.47, 0.03), 2)) #g kg^-1
set.seed(2)
(HgTot <- round(rnorm(8, 0.47, 0.03), 2)) #g kg^-1
t.test(x = HgTot, mu = 0.5, alternative = 'less')
set.seed(2)
(HgTot <- round(rnorm(8, 0.47, 0.04), 2)) #g kg^-1
set.seed(2)
(HgTot <- round(rnorm(8, 0.48, 0.04), 2)) #g kg^-1
t.test(x = HgTot, mu = 0.5, alternative = 'less')
set.seed(10)
(HgTot <- round(rnorm(8, 0.47, 0.04), 2)) #g kg^-1
t.test(x = HgTot, mu = 0.5, alternative = 'less')
set.seed(6)
(HgTot <- round(rnorm(8, 0.47, 0.04), 2)) #g kg^-1
t.test(x = HgTot, mu = 0.5, alternative = 'less')
set.seed(6)
(HgTot <- round(rnorm(8, 0.47, 0.035), 2)) #g kg^-1
t.test(x = HgTot, mu = 0.5, alternative = 'less')
set.seed(6)
(HgTot <- round(rnorm(8, 0.47, 0.03), 2)) #g kg^-1
t.test(x = HgTot, mu = 0.5, alternative = 'less')
set.seed(6)
(HgTot <- round(rnorm(8, 0.47, 0.03), 2)) #g kg^-1
t.test(x = HgTot, mu = 0.5, alternative = 'less')
t.test(x = HgTot, mu = 0.5)
t.test(x = HgTot, mu = 0.5, alternative = 'less')
t.test(x = HgTot, mu = 0.5)
t.test(x = HgTot, mu = 0.5, alternative = 'less')
runApp()
set.seed(6)
(HgTot <- round(rnorm(8, 470, 30), 2)) #g kg^-1
t.test(x = HgTot, mu = 500, alternative = 'less')
(HgTot <- round(rnorm(8, 470, 30), 0)) #g kg^-1
set.seed(6)
(HgTot <- round(rnorm(8, 470, 30), 0)) #g kg^-1
set.seed(8)
(HgTot <- round(rnorm(8, 470, 30), 0)) #g kg^-1
set.seed(10)
(HgTot <- round(rnorm(8, 470, 30), 0)) #g kg^-1
set.seed(11)
(HgTot <- round(rnorm(8, 470, 30), 0)) #g kg^-1
set.seed(12)
(HgTot <- round(rnorm(8, 470, 30), 0)) #g kg^-1
set.seed(13)
(HgTot <- round(rnorm(8, 470, 30), 0)) #g kg^-1
set.seed(14)
(HgTot <- round(rnorm(8, 470, 30), 0)) #g kg^-1
t.test(x = HgTot, mu = 500, alternative = 'less')
set.seed(15)
(HgTot <- round(rnorm(8, 470, 30), 0)) #g kg^-1
set.seed(16)
(HgTot <- round(rnorm(8, 470, 30), 0)) #g kg^-1
set.seed(17)
(HgTot <- round(rnorm(8, 470, 30), 0)) #g kg^-1
t.test(x = HgTot, mu = 500, alternative = 'less')
set.seed(18)
(HgTot <- round(rnorm(8, 470, 30), 0)) #g kg^-1
t.test(x = HgTot, mu = 500, alternative = 'less')
set.seed(19)
(HgTot <- round(rnorm(8, 470, 30), 0)) #g kg^-1
set.seed(20)
(HgTot <- round(rnorm(8, 470, 30), 0)) #g kg^-1
t.test(x = HgTot, mu = 500, alternative = 'less')
set.seed(21)
(HgTot <- round(rnorm(8, 470, 30), 0)) #g kg^-1
t.test(x = HgTot, mu = 500, alternative = 'less')
set.seed(22)
(HgTot <- round(rnorm(8, 470, 30), 0)) #g kg^-1
t.test(x = HgTot, mu = 500, alternative = 'less')
set.seed(23)
(HgTot <- round(rnorm(8, 470, 30), 0)) #g kg^-1
t.test(x = HgTot, mu = 500, alternative = 'less')
set.seed(24)
(HgTot <- round(rnorm(8, 470, 30), 0)) #g kg^-1
set.seed(25)
(HgTot <- round(rnorm(8, 470, 30), 0)) #g kg^-1
set.seed(26)
(HgTot <- round(rnorm(8, 470, 30), 0)) #g kg^-1
set.seed(27)
(HgTot <- round(rnorm(8, 470, 30), 0)) #g kg^-1
t.test(x = HgTot, mu = 500, alternative = 'less')
runApp()
t.test(x = HgTot, mu = 500, alternative = 'less')
runApp()
shapiro.test(HgTot)
pi
curve(y ~ (1/(sqrt(2*pi))))
curve(y ~ ((1/(sqrt(2*pi*sd(HgTot)^2)))*exp(-((x-500)^2)/(2*sd(HgTot)^2))))
curve(((1/(sqrt(2*pi*sd(HgTot)^2)))*exp(-((x-500)^2)/(2*sd(HgTot)^2)))
curve(function(x) ((1/(sqrt(2*pi*sd(HgTot)^2)))*exp(-((x-500)^2)/(2*sd(HgTot)^2))))
curve(function(x) ((1/(sqrt(2*pi*sd(HgTot)^2)))*exp(-((x-500)^2)/(2*sd(HgTot)^2))), n = 500)
curve(function(x) ((1/(sqrt(2*pi*sd(HgTot)^2)))*exp(-((x-500)^2)/(2*sd(HgTot)^2))), -400, 600)
curve(((1/(sqrt(2*pi*sd(HgTot)^2)))*exp(-((x-500)^2)/(2*sd(HgTot)^2))), -400, 600)
curve(((1/(sqrt(2*pi*sd(HgTot)^2)))*exp(-((x-500)^2)/(2*sd(HgTot)^2))), 400, 600)
(p4 <- ggplot(data.frame(x = seq(0, 1, 1)), aes(x = x)) +
geom_area(stat = "function", fun = dnorm, args = list(mean = 0.5, sd = 0.17), fill = "#97d7e4", alpha = 0.2, xlim = c(0, 1)) +
geom_area(stat = "function", fun = dnorm, args = list(mean = 0.5, sd = 0.17), fill = "#97d7e4", alpha = 0.7, xlim = c(0.16, 0.84)) +
geom_area(stat = "function", fun = dnorm, args = list(mean = 0.5, sd = 0.17), fill = "#97d7e4", xlim = c(0.33, 0.67)) +
geom_function(fun = dnorm, args = list(mean = 0.5, sd = .17)) +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black"), legend.position = "none") +
scale_x_continuous(name = NULL, expand = c(0, 0), breaks = NULL) +
scale_y_continuous(name = NULL, expand = c(0, 0), limits = c(0, 3.4), breaks = NULL) +
annotate(geom = "segment", x = c(0.33, 0.16), xend = c(0.67, 0.84), y = c(2.4, 2.95), yend = c(2.4, 2.95),
arrow = arrow(ends = "both")) +
annotate(geom = "segment", x = 0.5, xend = 0.5, y = 0, yend = 2.35, linetype = "dotted") +
annotate(geom = "segment", x = c(0.33, 0.67), xend = c(0.33, 0.67), y = 0, yend = 2.5, linetype = "dashed") +
annotate(geom = "segment", x = c(0.16, 0.84), xend = c(0.16, 0.84), y = 0, yend = 3.05, linetype = "dashed") +
annotate(geom = "text", x = 0.5, y = c(2.7, 3.15), size = 8,
label = c(expression(paste(bar(x), ' ± s = 66%')), expression(paste(bar(x), ' ± 2s = 95%')))))
#source('functions.R')
#Media aritmética
(p1 <- ggplot(data.frame(x = seq(0, 1, 1)), aes(x = x)) +
geom_area(stat = "function", fun = dnorm, args = list(mean = 0.5, sd = 0.17), fill = "#97d7e4", alpha = 0.3, xlim = c(0, 1)) +
geom_function(fun = dnorm, args = list(mean = 0.5, sd = .17)) +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black"), legend.position = "none") +
scale_x_continuous(name = NULL, expand = c(0, 0), breaks = NULL) +
scale_y_continuous(name = NULL, expand = c(0, 0), limits = c(0, 2.8), breaks = NULL) +
annotate(geom = "segment", x = 0.5, xend = 0.5, y = 0, yend = 2.35) +
annotate(geom = "text", x = 0.52, y = 2.48, size = 9, label = bquote(bar(x))))
#source('functions.R')
#Media aritmética
(p1 <- ggplot(data.frame(x = seq(0, 1, 1)), aes(x = x)) +
geom_area(stat = "function", fun = dnorm, args = list(mean = 0.5, sd = 0.17), fill = "#97d7e4", alpha = 0.3, xlim = c(0, 1)) +
geom_function(fun = dnorm, args = list(mean = 0.5, sd = .17)) +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black"), legend.position = "none") +
scale_x_continuous(name = NULL, expand = c(0, 0), breaks = NULL) +
scale_y_continuous(name = NULL, expand = c(0, 0), limits = c(0, 2.8), breaks = NULL) +
annotate(geom = "segment", x = 0.5, xend = 0.5, y = 0, yend = 2.35) +
annotate(geom = "text", x = 0.52, y = 2.48, size = 9, label = bquote(bar(x))))
library(ggplot2)
#source('functions.R')
#Media aritmética
(p1 <- ggplot(data.frame(x = seq(0, 1, 1)), aes(x = x)) +
geom_area(stat = "function", fun = dnorm, args = list(mean = 0.5, sd = 0.17), fill = "#97d7e4", alpha = 0.3, xlim = c(0, 1)) +
geom_function(fun = dnorm, args = list(mean = 0.5, sd = .17)) +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black"), legend.position = "none") +
scale_x_continuous(name = NULL, expand = c(0, 0), breaks = NULL) +
scale_y_continuous(name = NULL, expand = c(0, 0), limits = c(0, 2.8), breaks = NULL) +
annotate(geom = "segment", x = 0.5, xend = 0.5, y = 0, yend = 2.35) +
annotate(geom = "text", x = 0.52, y = 2.48, size = 9, label = bquote(bar(x))))
p1 <- ggplot(data.frame(x = seq(0, 1, 1)), aes(x = x))
p1 <- ggplot(data.frame(x = seq(0, 1, 1)), aes(x = x)) +
geom_area(stat = "function", fun = dnorm, args = list(mean = 0.5, sd = 0.17), fill = "#97d7e4", alpha = 0.3, xlim = c(0, 1)) +
geom_function(fun = dnorm, args = list(mean = 0.5, sd = .17))
p1 <- ggplot(data.frame(x = seq(0, 1, 1)), aes(x = x)) +
geom_area(stat = "function", fun = dnorm, args = list(mean = 0.5, sd = 0.17), fill = "#97d7e4", alpha = 0.3, xlim = c(0, 1))
p1 <- ggplot(data.frame(x = seq(0, 1, 1)), aes(x = x)) +
geom_area(stat = "function", fun = dnorm, args = list(mean = 0.5, sd = 0.17), fill = "#97d7e4", alpha = 0.3, xlim = c(0, 1)) +
geom_function(fun = dnorm, args = list(mean = 0.5, sd = .17))
ensure_nonempty_data
install.packages('ggplot2')
install.packages('ggplot2')
install.packages("ggplot2")
(p7 <-   ggplot(data.frame(x = seq(-5, 5, 1)), aes(x = x)) +
geom_area(stat = "function", fun = dlogis, args = list(scale = .5), fill = "#97d7e4", alpha = 0.3, xlim = c(-5, 5)) +
geom_area(stat = "function", fun = dlogis, fill = "#97d7e4", alpha = 0.3, xlim = c(-5, 5)) +
geom_area(stat = "function", fun = dlogis, args = list(scale = 2), fill = "#97d7e4", alpha = 0.3, xlim = c(-5, 5)) +
geom_function(fun = dlogis, args = list(scale = .5)) +
geom_function(fun = dlogis) + geom_function(fun = dlogis, args = list(scale = 2)) +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black"), legend.position = "none") +
scale_x_continuous(name = NULL, breaks = NULL, expand = c(0, 0)) +
scale_y_continuous(name = NULL, expand = c(0, 0), limits = c(0, 0.6), breaks = NULL) +
annotate(geom = 'text', x = 2.1, y = 0.4, label = 'Leptocúrtica', size = 8) +
annotate(geom = 'text', x = 2.4, y = 0.17, label = 'Meso~', size = 8) +
annotate(geom = 'text', x = 4, y = 0.1, label = 'Plato~', size = 8))
library(ggplot2)
(p7 <-   ggplot(data.frame(x = seq(-5, 5, 1)), aes(x = x)) +
geom_area(stat = "function", fun = dlogis, args = list(scale = .5), fill = "#97d7e4", alpha = 0.3, xlim = c(-5, 5)) +
geom_area(stat = "function", fun = dlogis, fill = "#97d7e4", alpha = 0.3, xlim = c(-5, 5)) +
geom_area(stat = "function", fun = dlogis, args = list(scale = 2), fill = "#97d7e4", alpha = 0.3, xlim = c(-5, 5)) +
geom_function(fun = dlogis, args = list(scale = .5)) +
geom_function(fun = dlogis) + geom_function(fun = dlogis, args = list(scale = 2)) +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black"), legend.position = "none") +
scale_x_continuous(name = NULL, breaks = NULL, expand = c(0, 0)) +
scale_y_continuous(name = NULL, expand = c(0, 0), limits = c(0, 0.6), breaks = NULL) +
annotate(geom = 'text', x = 2.1, y = 0.4, label = 'Leptocúrtica', size = 8) +
annotate(geom = 'text', x = 2.4, y = 0.17, label = 'Meso~', size = 8) +
annotate(geom = 'text', x = 4, y = 0.1, label = 'Plato~', size = 8))
shiny::runApp()
